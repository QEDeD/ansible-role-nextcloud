---

- name: Fail if required Nextcloud settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item.name }}`).
  when: "lookup('ansible.builtin.varnames', ('^' + item.name), wantlist=True) | length == 0"
  with_items:
    - {'name': 'nextcloud_hostname', when: true}
    - {'name': 'nextcloud_uid', when: true}
    - {'name': 'nextcloud_gid', when: true}
    - {'name': 'nextcloud_database_hostname', when: true}
    - {'name': 'nextcloud_database_name', when: true}
    - {'name': 'nextcloud_database_username', when: true}
    - {'name': 'nextcloud_database_password', when: true}
    - {'name': 'nextcloud_container_labels_traefik_compression_middleware_name', when: "{{ nextcloud_container_labels_traefik_compression_middleware_enabled }}"}

- name: (Deprecation) Catch and report renamed Nextcloud settings
  ansible.builtin.fail:
    msg: >-
      Your configuration contains a variable, which now has a different name.
      Please change your configuration to rename the variable (`{{ item.old }}` -> `{{ item.new }}`).
  when: "lookup('ansible.builtin.varnames', ('^' + item.old + '$'), wantlist=True) | length > 0"
  with_items:
    - { "old": "nextcloud_preview_squareSizes", "new": "<removed>" }
    - { "old": "nextcloud_preview_widthSizes", "new": "<removed>" }
    - { "old": "nextcloud_preview_heightSizes", "new": "<removed>" }
    - { "old": "nextcloud_preview_system_jpeg_quality", "new": "<removed>" }
    - { "old": "nextcloud_container_image_customizations_php_imageick_installation_enabled", "new": "nextcloud_container_image_customizations_php_imagick_installation_enabled" }
    - { "old": "nextcloud_container_image_customizations_php_imageick_installation_package", "new": "nextcloud_container_image_customizations_php_imagick_installation_packages" }

- when: nextcloud_container_labels_traefik_enabled | bool
  block:
    - name: Fail if required Nextcloud Traefik settings not defined
      ansible.builtin.fail:
        msg: >-
          You need to define a required configuration setting (`{{ item }}`).
      when: "vars[item] == ''"
      with_items:
        - nextcloud_container_labels_traefik_hostname
        - nextcloud_container_labels_traefik_path_prefix

    # We ensure it doesn't end with a slash, because we handle both (slash and no-slash).
    # Knowing that `nextcloud_container_labels_traefik_path_prefix` does not end with a slash
    # ensures we know how to set these routes up without having to do "does it end with a slash" checks elsewhere.
    - name: Fail if nextcloud_container_labels_traefik_path_prefix ends with a slash
      ansible.builtin.fail:
        msg: >-
          nextcloud_container_labels_traefik_path_prefix (`{{ nextcloud_container_labels_traefik_path_prefix }}`) must either be `/` or not end with a slash (e.g. `/nextcloud`).
      when: "nextcloud_container_labels_traefik_path_prefix != '/' and nextcloud_container_labels_traefik_path_prefix[-1] == '/'"
