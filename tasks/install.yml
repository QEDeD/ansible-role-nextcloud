# SPDX-FileCopyrightText: 2023 Gergely HorvÃ¡th
# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Ensure Nextcloud paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    mode: "0700"
    owner: "{{ nextcloud_uid }}"
    group: "{{ nextcloud_gid }}"
  with_items:
    - path: "{{ nextcloud_base_path }}"
      state: directory
      when: true
    - path: "{{ nextcloud_data_path }}"
      state: directory
      when: true
    - path: "{{ nextcloud_customized_container_src_path }}"
      state: directory
      when: "{{ nextcloud_container_image_customizations_enabled }}"
    - path: "{{ nextcloud_redis_session_ini_path }}"
      state: "{{ 'touch' if nextcloud_redis_is_configured else 'absent' }}"
      when: true
    - path: "{{ nextcloud_preview_host_folder }}"
      state: "{{ 'directory' if nextcloud_preview_enabled else 'absent' }}"
      when: true
  when: item.when | bool

- name: Ensure Nextcloud support files installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/{{ item }}.j2"
    dest: "{{ nextcloud_base_path }}/{{ item }}"
    mode: "0640"
  with_items:
    - env
    - labels

- name: Ensure Nextcloud Preview Generator files are present
  when: "nextcloud_preview_enabled | bool"
  ansible.builtin.template:
    src: "{{ role_path }}/templates/preview-generator/{{ item }}.j2"
    dest: "{{ nextcloud_preview_host_folder }}/{{ item }}"
    mode: "0740"
  with_items:
    - preview-generator-cron.sh

- name: Ensure Nextcloud container image is pulled via community.docker.docker_image
  when: devture_systemd_docker_base_container_image_pull_method == 'ansible-module'
  community.docker.docker_image:
    name: "{{ nextcloud_container_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ nextcloud_container_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else nextcloud_container_image_force_pull }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure Nextcloud container image is pulled via ansible.builtin.command
  when: devture_systemd_docker_base_container_image_pull_method == 'command'
  ansible.builtin.command:
    cmd: "{{ devture_systemd_docker_base_host_command_docker }} pull {{ nextcloud_container_image }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed
  changed_when: "'Downloaded newer image' in result.stdout"

- name: Run if container image customizations are enabled
  when: "nextcloud_container_image_customizations_enabled | bool"
  block:
    - name: Ensure customizations Dockerfile is created
      ansible.builtin.template:
        src: "{{ role_path }}/templates/customizations/Dockerfile.j2"
        dest: "{{ nextcloud_customized_container_src_path }}/Dockerfile"
        owner: "{{ nextcloud_uid }}"
        group: "{{ nextcloud_gid }}"
        mode: "0640"
      register: nextcloud_container_image_customizations_dockerfile_result

    - name: Ensure customized container image for Nextcloud is built
      community.docker.docker_image:
        name: "{{ nextcloud_container_image_customized }}"
        source: build
        force_source: "{{ nextcloud_container_image_customizations_dockerfile_result.changed }}"
        build:
          dockerfile: Dockerfile
          path: "{{ nextcloud_customized_container_src_path }}"
          pull: true

- name: Ensure Nextcloud container network is created via community.docker.docker_network
  when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
  community.docker.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ nextcloud_container_network }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"

- name: Ensure Nextcloud container network is created via ansible.builtin.command
  when: devture_systemd_docker_base_container_network_creation_method == 'command'
  ansible.builtin.command:
    cmd: >-
      {{ devture_systemd_docker_base_host_command_docker }} network create
      {% if devture_systemd_docker_base_ipv6_enabled %}--ipv6{% endif %}
      {{ devture_systemd_docker_base_container_networks_driver_options_string }}
      {{ nextcloud_container_network }}
  register: network_creation_result
  changed_when: network_creation_result.rc == 0
  failed_when: network_creation_result.rc != 0 and 'already exists' not in network_creation_result.stderr

- name: Ensure Nextcloud systemd services are present
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/{{ item }}.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ nextcloud_identifier }}-{{ item }}"
    mode: "0644"
  with_items:
    - server.service
    - cron.service
    - cron.timer

- name: Run if auto update for Nextcloud apps is enabled
  when: "nextcloud_app_autoupdate_enabled | bool"
  block:
    - name: Ensure Nextcloud app update systemd services are present
      ansible.builtin.template:
        src: "{{ role_path }}/templates/systemd/{{ item }}.j2"
        dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ nextcloud_identifier }}-{{ item }}"
        mode: "0640"
      with_items:
        - app-update.service
        - app-update.timer

- name: Run if auto update for Nextcloud apps is not enabled
  when: "not nextcloud_app_autoupdate_enabled | bool"
  block:
    - name: Ensure Nextcloud systemd app update services do not exist
      ansible.builtin.file:
        path: "{{ devture_systemd_docker_base_systemd_path }}/{{ nextcloud_identifier }}-{{ item }}"
        state: absent
      with_items:
        - app-update.service
        - app-update.timer

- name: Notify to run the task for Nextcloud configurations adjustment
  ansible.builtin.set_fact:
    devture_playbook_runtime_messages_list: |
      {{
        devture_playbook_runtime_messages_list | default([])
        +
        [
          "Note: make sure to run the playbook with the `adjust-nextcloud-config` tag to update configurations for your Nextcloud instance. You might also want to run the `mimetype-migrations-nextcloud` tag after upgrades."
        ]
      }}
